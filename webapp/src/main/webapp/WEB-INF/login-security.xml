<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                            http://www.springframework.org/schema/security
                            http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<beans:import resource="login-service.xml" />
	<http use-expressions="true" access-denied-page="/#login" entry-point-ref="entryPoint">
		<form-login login-page="/#login"
			authentication-success-handler-ref="ajaxSuccessHandler"
			authentication-failure-handler-ref="ajaxFailureHandler"
			always-use-default-target="false" default-target-url="/#container"
			authentication-failure-url="/#login?error=true" />

		<intercept-url pattern="/css/**" access="permitAll" />
		<intercept-url pattern="/js/**" access="permitAll" />
		<intercept-url pattern="/templates/**"    access="permitAll" />
		<intercept-url pattern="/#login" access="permitAll" />
		<intercept-url pattern="/*" access="permitAll" />
		<intercept-url pattern="/**"
			access="isAuthenticated() and hasRole('ROLE_USER')" />
		<intercept-url pattern="/services/**"
			access="isAuthenticated() and hasRole('ROLE_USER')" />
		<logout delete-cookies="JSESSIONID" success-handler-ref="ajaxLogoutSuccessHandler" />
		<remember-me data-source-ref="loginDataSource"/>
	</http>

	<!-- entry point to avoid redirection when  url intercepted 401 -->
	<beans:bean id="entryPoint"
		class="org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint">
		<beans:constructor-arg>
			<beans:map>
				<beans:entry key="hasHeader('X-Requested-With','XMLHttpRequest')"
					value-ref="http401UnauthorizedEntryPoint" />
			</beans:map>
		</beans:constructor-arg>
		<beans:property name="defaultEntryPoint">
			<beans:bean
				class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
				 <beans:property name="loginFormUrl" value="/#login"/>
			</beans:bean>
		</beans:property>
	</beans:bean>
	<beans:bean id="http401UnauthorizedEntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"></beans:bean>

	<beans:bean id="ajaxSuccessHandler"
		class="com.hn.authenticationHandler.AjaxAuthenticationSuccessHandler">
	</beans:bean>
	<beans:bean id="ajaxFailureHandler"
		class="com.hn.authenticationHandler.AjaxAuthenticationFailureHandler">
	</beans:bean>
	<beans:bean id="ajaxLogoutSuccessHandler"
		class="com.hn.authenticationHandler.AjaxLogoutSuccessHandler"></beans:bean>



	<authentication-manager>
		<authentication-provider>
			<password-encoder hash="sha-256" base64="true" />
			<jdbc-user-service data-source-ref="loginDataSource"
				authorities-by-username-query="select u.username as username , r.authority as authority from user as u , role as r, user_role as ur where u.id=ur.user_id AND ur.role_id = r.id and u.username= ?"
				users-by-username-query="select username , password , enabled from user where username= ? " />

		</authentication-provider>
	</authentication-manager>
</beans:beans>